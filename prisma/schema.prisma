generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  Pending
  Completed
  Failed
}

enum Currency {
  BZD
  USD
}

model Ekyash {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  api        String    @db.VarChar(255)
  sid        BigInt    @db.BigInt
  pinHash    String    @db.VarChar(255)
  pinEncoded String    @db.VarChar(255)
  phone      String    @db.VarChar(255)
  Supplier   Supplier?
}

model Supplier {
  id       Int     @id @default(autoincrement())
  username String  @unique @db.VarChar(255)
  name     String  @db.VarChar(255)
  tag      String  @db.VarChar(255)
  logoUrl  String  @db.VarChar(255)
  homepage String  @db.VarChar(255)
  ekyash   Ekyash? @relation(fields: [ekyashId], references: [id])
  ekyashId Int?    @unique
  Order  Order[]
}

enum EKyashStatus {
  New
  Pending
  Canceled
  Success
}

model EKyashTransaction {
  id            Int          @id @default(autoincrement())
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  deeplinkUrl   String       @db.VarChar(255)
  qrCodeUrl     String       @db.VarChar(255)
  status        EKyashStatus @default(Pending)
  invoiceId     String       @db.VarChar(255)
  transactionId String       @db.VarChar(255)
  invoiceUrl    String       @db.VarChar(255)
  order         Order        @relation(fields: [orderId], references: [id])
  orderId       Int          @unique
}

model Order {
  id                Int                @id @default(autoincrement())
  description       String             @db.VarChar(255)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  invoice           String             @unique @db.VarChar(255)
  status            OrderStatus        @default(Pending)
  currency          Currency           @default(BZD)
  amount            Int
  supplier          Supplier           @relation(fields: [supplierId], references: [id])
  supplierId        Int
  additionalData    Json
  orderItems        OrderItem[]
  ekyashTransaction EKyashTransaction?
}

model OrderItem {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  quantity    Int
  description String   @db.VarChar(255)
  price       Int
  currency    Currency @default(BZD)
  order       Order    @relation(fields: [orderId], references: [id])
  orderId     Int
}
